Elm.Display = Elm.Display || {};
Elm.Display.make = function (_elm) {
   "use strict";
   _elm.Display = _elm.Display || {};
   if (_elm.Display.values)
   return _elm.Display.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   _P = _N.Ports.make(_elm),
   $moduleName = "Display",
   $Basics = Elm.Basics.make(_elm),
   $BoardControls = Elm.BoardControls.make(_elm),
   $Color = Elm.Color.make(_elm),
   $Controls = Elm.Controls.make(_elm),
   $Graphics$Collage = Elm.Graphics.Collage.make(_elm),
   $Graphics$Element = Elm.Graphics.Element.make(_elm),
   $Keyboard = Elm.Keyboard.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Models = Elm.Models.make(_elm),
   $Pacman = Elm.Pacman.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Text = Elm.Text.make(_elm),
   $Time = Elm.Time.make(_elm),
   $Utils = Elm.Utils.make(_elm),
   $Window = Elm.Window.make(_elm);
   var upstate = F2(function (a,
   s) {
      return function () {
         switch (a.ctor)
         {case "KeyAction":
            return _U.replace([["pacman"
                               ,A2($Controls.updateDir,
                               a._0,
                               s.pacman)]],
              s);
            case "TimeAction":
            return function () {
                 var $ = A2($BoardControls.updateBoard,
                 s.board,
                 s.pacman),
                 pells = $._0,
                 newBoard = $._1;
                 return _U.replace([["pacman"
                                    ,$Controls.updatePacPos(s.pacman)]
                                   ,["board",newBoard]
                                   ,["points",s.points + pells]],
                 s);
              }();}
         _U.badCase($moduleName,
         "between lines 106 and 112");
      }();
   });
   var TimeAction = {ctor: "TimeAction"};
   var KeyAction = function (a) {
      return {ctor: "KeyAction"
             ,_0: a};
   };
   var actions = A2($Signal.merge,
   A2($Signal.map,
   function (k) {
      return KeyAction(k);
   },
   $Keyboard.lastPressed),
   $Signal.sampleOn($Time.every($Time.second / 40))($Signal.constant(TimeAction)));
   var currState = $Signal.dropRepeats(A3($Signal.foldp,
   upstate,
   $Pacman.initState,
   actions));
   var scoreStyle = {_: {}
                    ,bold: false
                    ,color: $Color.white
                    ,height: $Maybe.Just(15)
                    ,italic: false
                    ,line: $Maybe.Nothing
                    ,typeface: _L.fromArray(["Andale Mono"
                                            ,"monospace"])};
   var displayBox = F2(function (b,
   bSide) {
      return function () {
         switch (b.ctor)
         {case "Empty":
            return A3($Graphics$Collage.collage,
              bSide,
              bSide,
              _L.fromArray([$Models.emptySpace($Basics.toFloat(bSide))]));
            case "Pellet":
            return A3($Graphics$Collage.collage,
              bSide,
              bSide,
              _L.fromArray([$Models.pellet($Basics.toFloat(bSide) / 6)]));
            case "Pill":
            return A3($Graphics$Collage.collage,
              bSide,
              bSide,
              _L.fromArray([$Models.pill($Basics.toFloat(bSide) / 3)]));
            case "Wall":
            return A3($Graphics$Collage.collage,
              bSide,
              bSide,
              _L.fromArray([$Models.wall($Basics.toFloat(bSide))]));}
         _U.badCase($moduleName,
         "between lines 46 and 50");
      }();
   });
   var renderPacman = F2(function (p,
   bSide) {
      return function () {
         var pman_form = function () {
            var _v3 = p.dir;
            switch (_v3.ctor)
            {case "Down":
               return A2($Models.pacman,
                 $Models.Down,
                 $Basics.toFloat(bSide) / 2);
               case "Left":
               return A2($Models.pacman,
                 $Models.Left,
                 $Basics.toFloat(bSide) / 2);
               case "Right":
               return A2($Models.pacman,
                 $Models.Right,
                 $Basics.toFloat(bSide) / 2);
               case "Up":
               return A2($Models.pacman,
                 $Models.Up,
                 $Basics.toFloat(bSide) / 2);}
            _U.badCase($moduleName,
            "between lines 36 and 41");
         }();
         return A3($Graphics$Collage.collage,
         bSide,
         bSide,
         _L.fromArray([pman_form]));
      }();
   });
   var title = F2(function (w,h) {
      return A3($Graphics$Element.container,
      w,
      h + 20,
      $Graphics$Element.middle)(A2($Graphics$Element.flow,
      $Graphics$Element.down,
      _L.fromArray([A3($Graphics$Element.image,
                   w,
                   h,
                   "/pacman-logo.jpg")
                   ,A2($Graphics$Element.spacer,
                   w,
                   20)])));
   });
   var view = F2(function (_v4,
   st) {
      return function () {
         switch (_v4.ctor)
         {case "_Tuple2":
            return function () {
                 var pac_dir = function () {
                    var _v8 = st.pacman.dir;
                    switch (_v8.ctor)
                    {case "Down":
                       return $Models.Down;
                       case "Left":
                       return $Models.Left;
                       case "Right":
                       return $Models.Right;
                       case "Up": return $Models.Up;}
                    _U.badCase($moduleName,
                    "between lines 76 and 82");
                 }();
                 var score = $Text.leftAligned($Text.style(scoreStyle)($Text.fromString(A2($Basics._op["++"],
                 "SCORE: ",
                 $Basics.toString(st.points)))));
                 var titleHeight = 30;
                 var bSide = (_v4._1 - 45) / 36 | 0;
                 var titleWidth = bSide * 23;
                 var ttl = A2(title,
                 titleWidth,
                 titleHeight);
                 var scoreTitle = A2($Graphics$Element.flow,
                 $Graphics$Element.right,
                 _L.fromArray([ttl,score]));
                 var colBuilder = function (rws) {
                    return A2($Graphics$Element.flow,
                    $Graphics$Element.down,
                    A2($Basics._op["++"],
                    _L.fromArray([ttl]),
                    rws));
                 };
                 var rowBuilder = function (bxs) {
                    return A2($Graphics$Element.flow,
                    $Graphics$Element.left,
                    A2($List.map,
                    function (b) {
                       return A2(displayBox,
                       b,
                       bSide);
                    },
                    bxs));
                 };
                 var pac_pos = A3($Utils.itow,
                 bSide * $Pacman.numCols,
                 titleHeight + 20 + bSide * $Pacman.numRows,
                 st.pacman.pos);
                 return $Graphics$Element.color($Color.black)(A3($Graphics$Collage.collage,
                 _v4._0,
                 _v4._1,
                 _L.fromArray([$Graphics$Collage.toForm(colBuilder(A2($List.map,
                              rowBuilder,
                              st.board)))
                              ,$Graphics$Collage.move(pac_pos)($Models.pacman(pac_dir)($Basics.toFloat(bSide / 2 | 0)))])));
              }();}
         _U.badCase($moduleName,
         "between lines 63 and 87");
      }();
   });
   var main = A2($Signal._op["~"],
   A2($Signal._op["<~"],
   view,
   $Window.dimensions),
   currState);
   _elm.Display.values = {_op: _op
                         ,title: title
                         ,renderPacman: renderPacman
                         ,displayBox: displayBox
                         ,scoreStyle: scoreStyle
                         ,view: view
                         ,KeyAction: KeyAction
                         ,TimeAction: TimeAction
                         ,actions: actions
                         ,currState: currState
                         ,upstate: upstate
                         ,main: main};
   return _elm.Display.values;
};