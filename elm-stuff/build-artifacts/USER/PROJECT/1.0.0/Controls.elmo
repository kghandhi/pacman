Elm.Controls = Elm.Controls || {};
Elm.Controls.make = function (_elm) {
   "use strict";
   _elm.Controls = _elm.Controls || {};
   if (_elm.Controls.values)
   return _elm.Controls.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   _P = _N.Ports.make(_elm),
   $moduleName = "Controls",
   $Array = Elm.Array.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Keyboard = Elm.Keyboard.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Pacman = Elm.Pacman.make(_elm);
   var updateDir = F2(function (last_key,
   pacman_old) {
      return function () {
         var dir_old = pacman_old.dir;
         var dir_new = _U.eq(last_key,
         37) ? $Pacman.Left : _U.eq(last_key,
         38) ? $Pacman.Up : _U.eq(last_key,
         39) ? $Pacman.Right : _U.eq(last_key,
         40) ? $Pacman.Down : dir_old;
         return _U.replace([["dir"
                            ,dir_new]],
         pacman_old);
      }();
   });
   var pos_add = F2(function (_v0,
   _v1) {
      return function () {
         switch (_v1.ctor)
         {case "_Tuple2":
            return function () {
                 switch (_v0.ctor)
                 {case "_Tuple2":
                    return {ctor: "_Tuple2"
                           ,_0: _v0._0 + _v1._0
                           ,_1: _v0._1 + _v1._1};}
                 _U.badCase($moduleName,
                 "on line 33, column 4 to 18");
              }();}
         _U.badCase($moduleName,
         "on line 33, column 4 to 18");
      }();
   });
   var wallLocs = $Array.fromList(A2($List.map,
   $Array.fromList,
   $Pacman.initBoard));
   var isWall = function (_v8) {
      return function () {
         switch (_v8.ctor)
         {case "_Tuple2":
            return function () {
                 var $ = {ctor: "_Tuple2"
                         ,_0: A2($Basics.clamp,
                         0,
                         $Pacman.numRows - 1)($Basics.floor(_v8._1))
                         ,_1: A2($Basics.clamp,
                         0,
                         $Pacman.numRows - 1)($Basics.ceiling(_v8._1))},
                 cyu = $._0,
                 cyd = $._1;
                 var _ = {ctor: "_Tuple2"
                         ,_0: A2($Array.get,cyu,wallLocs)
                         ,_1: A2($Array.get,
                         cyd,
                         wallLocs)};
                 var rwd = function () {
                    switch (_.ctor)
                    {case "_Tuple2":
                       switch (_._0.ctor)
                         {case "Just": switch (_._1.ctor)
                              {case "Just": return _._1._0;}
                              break;}
                         break;}
                    _U.badCase($moduleName,
                    "on line 20, column 30 to 72");
                 }();
                 var rwu = function () {
                    switch (_.ctor)
                    {case "_Tuple2":
                       switch (_._0.ctor)
                         {case "Just": switch (_._1.ctor)
                              {case "Just": return _._0._0;}
                              break;}
                         break;}
                    _U.badCase($moduleName,
                    "on line 20, column 30 to 72");
                 }();
                 var $ = {ctor: "_Tuple2"
                         ,_0: A2($Basics.clamp,
                         0,
                         $Pacman.numCols - 1)($Basics.floor(_v8._0))
                         ,_1: A2($Basics.clamp,
                         0,
                         $Pacman.numCols - 1)($Basics.ceiling(_v8._0))},
                 cxl = $._0,
                 cxr = $._1;
                 var _ = {ctor: "_Tuple4"
                         ,_0: A2($Array.get,cxl,rwu)
                         ,_1: A2($Array.get,cxl,rwd)
                         ,_2: A2($Array.get,cxr,rwu)
                         ,_3: A2($Array.get,cxr,rwd)};
                 var bxdl = function () {
                    switch (_.ctor)
                    {case "_Tuple4":
                       switch (_._0.ctor)
                         {case "Just": switch (_._1.ctor)
                              {case "Just": switch (_._2.ctor)
                                   {case "Just": switch (_._3.ctor)
                                        {case "Just": return _._2._0;}
                                        break;}
                                   break;}
                              break;}
                         break;}
                    _U.badCase($moduleName,
                    "on line 22, column 8 to 74");
                 }();
                 var bxdr = function () {
                    switch (_.ctor)
                    {case "_Tuple4":
                       switch (_._0.ctor)
                         {case "Just": switch (_._1.ctor)
                              {case "Just": switch (_._2.ctor)
                                   {case "Just": switch (_._3.ctor)
                                        {case "Just": return _._3._0;}
                                        break;}
                                   break;}
                              break;}
                         break;}
                    _U.badCase($moduleName,
                    "on line 22, column 8 to 74");
                 }();
                 var bxul = function () {
                    switch (_.ctor)
                    {case "_Tuple4":
                       switch (_._0.ctor)
                         {case "Just": switch (_._1.ctor)
                              {case "Just": switch (_._2.ctor)
                                   {case "Just": switch (_._3.ctor)
                                        {case "Just": return _._0._0;}
                                        break;}
                                   break;}
                              break;}
                         break;}
                    _U.badCase($moduleName,
                    "on line 22, column 8 to 74");
                 }();
                 var bxur = function () {
                    switch (_.ctor)
                    {case "_Tuple4":
                       switch (_._0.ctor)
                         {case "Just": switch (_._1.ctor)
                              {case "Just": switch (_._2.ctor)
                                   {case "Just": switch (_._3.ctor)
                                        {case "Just": return _._1._0;}
                                        break;}
                                   break;}
                              break;}
                         break;}
                    _U.badCase($moduleName,
                    "on line 22, column 8 to 74");
                 }();
                 return function () {
                    var _v58 = {ctor: "_Tuple4"
                               ,_0: bxul
                               ,_1: bxur
                               ,_2: bxdl
                               ,_3: bxdr};
                    switch (_v58.ctor)
                    {case "_Tuple4":
                       switch (_v58._0.ctor)
                         {case "Wall": return true;}
                         switch (_v58._1.ctor)
                         {case "Wall": return true;}
                         switch (_v58._2.ctor)
                         {case "Wall": return true;}
                         switch (_v58._3.ctor)
                         {case "Wall": return true;}
                         break;}
                    return false;
                 }();
              }();}
         _U.badCase($moduleName,
         "between lines 15 and 29");
      }();
   };
   var updatePacPos = function (pacman_old) {
      return function () {
         var delta = 0.5;
         var d = pacman_old.dir;
         var old_pos = pacman_old.pos;
         var new_pos = function () {
            switch (d.ctor)
            {case "Down": return A2(pos_add,
                 old_pos,
                 {ctor: "_Tuple2"
                 ,_0: 0.0
                 ,_1: delta});
               case "Left": return A2(pos_add,
                 old_pos,
                 {ctor: "_Tuple2"
                 ,_0: 0 - delta
                 ,_1: 0.0});
               case "Right": return A2(pos_add,
                 old_pos,
                 {ctor: "_Tuple2"
                 ,_0: delta
                 ,_1: 0.0});
               case "Up": return A2(pos_add,
                 old_pos,
                 {ctor: "_Tuple2"
                 ,_0: 0.0
                 ,_1: 0 - delta});}
            _U.badCase($moduleName,
            "between lines 42 and 47");
         }();
         var $ = new_pos,
         newx = $._0,
         newy = $._1;
         return _U.replace([["pos"
                            ,isWall(new_pos) ? old_pos : _U.cmp(newx,
                            $Basics.toFloat($Pacman.numCols) - 1) > 0 ? {ctor: "_Tuple2"
                                                                        ,_0: 0
                                                                        ,_1: newy} : _U.cmp(newx,
                            0) < 0 ? {ctor: "_Tuple2"
                                     ,_0: $Basics.toFloat($Pacman.numCols) - 1
                                     ,_1: newy} : new_pos]],
         pacman_old);
      }();
   };
   _elm.Controls.values = {_op: _op
                          ,wallLocs: wallLocs
                          ,isWall: isWall
                          ,pos_add: pos_add
                          ,updatePacPos: updatePacPos
                          ,updateDir: updateDir};
   return _elm.Controls.values;
};